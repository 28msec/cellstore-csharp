using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using CellStore.Client;
using CellStore.Api;
using CellStore.Model;

namespace CellStore.Test
{
    /// <summary>
    ///  Class for testing DataApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DataApiTests
    {
        private DataApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
           instance = new DataApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DataApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf<DataApi> (instance, "instance is a DataApi");
        }

        
        /// <summary>
        /// Test AddFacts
        /// </summary>
        [Test]
        public void AddFactsTest()
        {
            // TODO: add unit test for the method 'AddFacts'
            string token = null; // TODO: replace null with proper value
            Object fact = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            
            var response = instance.AddFacts(token, fact, formatIndent);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test DeleteComponentModelStructure
        /// </summary>
        [Test]
        public void DeleteComponentModelStructureTest()
        {
            // TODO: add unit test for the method 'DeleteComponentModelStructure'
            string token = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            
            var response = instance.DeleteComponentModelStructure(token, aid, section, hypercube);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test DeleteEntity
        /// </summary>
        [Test]
        public void DeleteEntityTest()
        {
            // TODO: add unit test for the method 'DeleteEntity'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            
            var response = instance.DeleteEntity(token, profileName, formatIndent, eid, cik, edinetcode, ticker);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test DeleteFiling
        /// </summary>
        [Test]
        public void DeleteFilingTest()
        {
            // TODO: add unit test for the method 'DeleteFiling'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            
            var response = instance.DeleteFiling(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test DeleteLabel
        /// </summary>
        [Test]
        public void DeleteLabelTest()
        {
            // TODO: add unit test for the method 'DeleteLabel'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            string labelRole = null; // TODO: replace null with proper value
            
            var response = instance.DeleteLabel(token, profileName, formatIndent, aid, section, reportElement, language, labelRole);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test DeleteReportElement
        /// </summary>
        [Test]
        public void DeleteReportElementTest()
        {
            // TODO: add unit test for the method 'DeleteReportElement'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            
            var response = instance.DeleteReportElement(token, profileName, formatIndent, aid, section, reportElement);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test DeleteSection
        /// </summary>
        [Test]
        public void DeleteSectionTest()
        {
            // TODO: add unit test for the method 'DeleteSection'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            
            var response = instance.DeleteSection(token, profileName, formatIndent, aid, section);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test InsertComponentModelStructure
        /// </summary>
        [Test]
        public void InsertComponentModelStructureTest()
        {
            // TODO: add unit test for the method 'InsertComponentModelStructure'
            string token = null; // TODO: replace null with proper value
            Object modelStructure = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            
            var response = instance.InsertComponentModelStructure(token, modelStructure, profileName, formatIndent);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test InsertEntities
        /// </summary>
        [Test]
        public void InsertEntitiesTest()
        {
            // TODO: add unit test for the method 'InsertEntities'
            string token = null; // TODO: replace null with proper value
            Object entity = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            
            var response = instance.InsertEntities(token, entity, profileName);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test InsertFilings
        /// </summary>
        [Test]
        public void InsertFilingsTest()
        {
            // TODO: add unit test for the method 'InsertFilings'
            string token = null; // TODO: replace null with proper value
            Object filing = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            string filingDetectionProfileName = null; // TODO: replace null with proper value
            bool? taxonomy = null; // TODO: replace null with proper value
            bool? insertEntity = null; // TODO: replace null with proper value
            string contentType = null; // TODO: replace null with proper value
            
            var response = instance.InsertFilings(token, filing, profileName, formatIndent, aid, filingDetectionProfileName, taxonomy, insertEntity, contentType);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListComponents
        /// </summary>
        [Test]
        public void ListComponentsTest()
        {
            // TODO: add unit test for the method 'ListComponents'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            
            var response = instance.ListComponents(token, profileName, formatIndent, eid, ticker, tag, sic, cik, edinetcode, archiveFiscalYear, archiveFiscalPeriod, filingKind, aid, section, hypercube, disclosure, reportElement, label, count, top, skip, validate, language);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListEntities
        /// </summary>
        [Test]
        public void ListEntitiesTest()
        {
            // TODO: add unit test for the method 'ListEntities'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            string entitySearch = null; // TODO: replace null with proper value
            int? entitySearchOffset = null; // TODO: replace null with proper value
            int? entitySearchLimit = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListEntities(token, profileName, formatIndent, tag, eid, cik, edinetcode, sic, ticker, entitySearch, entitySearchOffset, entitySearchLimit, language, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListFactTable
        /// </summary>
        [Test]
        public void ListFactTableTest()
        {
            // TODO: add unit test for the method 'ListFactTable'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> concept = null; // TODO: replace null with proper value
            List<string> fiscalYear = null; // TODO: replace null with proper value
            List<string> fiscalPeriod = null; // TODO: replace null with proper value
            List<string> fiscalPeriodType = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            string additionalRules = null; // TODO: replace null with proper value
            bool? labels = null; // TODO: replace null with proper value
            string auditTrails = null; // TODO: replace null with proper value
            bool? open = null; // TODO: replace null with proper value
            Dictionary<string, List<string>> dimensions = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionsCategory = null; // TODO: replace null with proper value
            Dictionary<string, bool?> dimensionsVisible = null; // TODO: replace null with proper value
            Dictionary<string, bool?> dimensionSlicers = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            string aggregationFunction = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            bool? merge = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? _override = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListFactTable(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, section, hypercube, concept, fiscalYear, fiscalPeriod, fiscalPeriodType, archiveFiscalYear, archiveFiscalPeriod, additionalRules, labels, auditTrails, open, dimensions, dimensionsCategory, dimensionsVisible, dimensionSlicers, filingKind, disclosure, reportElement, label, aggregationFunction, validate, merge, language, _override, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListFactTableForReport
        /// </summary>
        [Test]
        public void ListFactTableForReportTest()
        {
            // TODO: add unit test for the method 'ListFactTableForReport'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<string> concept = null; // TODO: replace null with proper value
            List<string> fiscalYear = null; // TODO: replace null with proper value
            List<string> fiscalPeriod = null; // TODO: replace null with proper value
            List<string> fiscalPeriodType = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            bool? open = null; // TODO: replace null with proper value
            string report = null; // TODO: replace null with proper value
            bool? labels = null; // TODO: replace null with proper value
            string auditTrails = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            string aggregationFunction = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            bool? _override = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListFactTableForReport(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, concept, fiscalYear, fiscalPeriod, fiscalPeriodType, archiveFiscalYear, archiveFiscalPeriod, open, report, labels, auditTrails, language, aggregationFunction, validate, _override, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListFacts
        /// </summary>
        [Test]
        public void ListFactsTest()
        {
            // TODO: add unit test for the method 'ListFacts'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<string> concept = null; // TODO: replace null with proper value
            List<string> fiscalYear = null; // TODO: replace null with proper value
            List<string> fiscalPeriod = null; // TODO: replace null with proper value
            List<string> fiscalPeriodType = null; // TODO: replace null with proper value
            List<string> archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            string map = null; // TODO: replace null with proper value
            string rule = null; // TODO: replace null with proper value
            string report = null; // TODO: replace null with proper value
            string additionalRules = null; // TODO: replace null with proper value
            bool? labels = null; // TODO: replace null with proper value
            string auditTrails = null; // TODO: replace null with proper value
            bool? open = null; // TODO: replace null with proper value
            Dictionary<string, List<string>> dimensions = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionTypes = null; // TODO: replace null with proper value
            Dictionary<string, string> defaultDimensionValues = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionsCategory = null; // TODO: replace null with proper value
            Dictionary<string, bool?> dimensionsVisible = null; // TODO: replace null with proper value
            Dictionary<string, bool?> dimensionSlicers = null; // TODO: replace null with proper value
            Dictionary<string, int?> dimensionColumns = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionAggregation = null; // TODO: replace null with proper value
            string aggregationFunction = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListFacts(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, concept, fiscalYear, fiscalPeriod, fiscalPeriodType, archiveFiscalYear, archiveFiscalPeriod, map, rule, report, additionalRules, labels, auditTrails, open, dimensions, dimensionTypes, defaultDimensionValues, dimensionsCategory, dimensionsVisible, dimensionSlicers, dimensionColumns, dimensionAggregation, aggregationFunction, validate, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListFilings
        /// </summary>
        [Test]
        public void ListFilingsTest()
        {
            // TODO: add unit test for the method 'ListFilings'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListFilings(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, language, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListLabels
        /// </summary>
        [Test]
        public void ListLabelsTest()
        {
            // TODO: add unit test for the method 'ListLabels'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            string labelRole = null; // TODO: replace null with proper value
            bool? onlyTextBlocks = null; // TODO: replace null with proper value
            string kind = null; // TODO: replace null with proper value
            bool? eliminateReportElementDuplicates = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListLabels(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, section, hypercube, disclosure, reportElement, label, language, labelRole, onlyTextBlocks, kind, eliminateReportElementDuplicates, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListModelStructure
        /// </summary>
        [Test]
        public void ListModelStructureTest()
        {
            // TODO: add unit test for the method 'ListModelStructure'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? indent = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListModelStructure(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, section, hypercube, disclosure, reportElement, label, language, indent, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListPeriods
        /// </summary>
        [Test]
        public void ListPeriodsTest()
        {
            // TODO: add unit test for the method 'ListPeriods'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListPeriods(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListReportElements
        /// </summary>
        [Test]
        public void ListReportElementsTest()
        {
            // TODO: add unit test for the method 'ListReportElements'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            bool? onlyNames = null; // TODO: replace null with proper value
            string report = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            bool? onlyTextBlocks = null; // TODO: replace null with proper value
            string kind = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            string contentType = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListReportElements(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, section, hypercube, disclosure, reportElement, onlyNames, report, label, onlyTextBlocks, kind, language, contentType, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListRules
        /// </summary>
        [Test]
        public void ListRulesTest()
        {
            // TODO: add unit test for the method 'ListRules'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListRules(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, section, disclosure, reportElement, label, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListSections
        /// </summary>
        [Test]
        public void ListSectionsTest()
        {
            // TODO: add unit test for the method 'ListSections'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            int? top = null; // TODO: replace null with proper value
            int? skip = null; // TODO: replace null with proper value
            
            var response = instance.ListSections(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, archiveFiscalYear, archiveFiscalPeriod, filingKind, section, hypercube, disclosure, reportElement, label, validate, language, count, top, skip);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test ListSpreadsheetForReport
        /// </summary>
        [Test]
        public void ListSpreadsheetForReportTest()
        {
            // TODO: add unit test for the method 'ListSpreadsheetForReport'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<string> fiscalYear = null; // TODO: replace null with proper value
            List<string> fiscalPeriod = null; // TODO: replace null with proper value
            List<string> fiscalPeriodType = null; // TODO: replace null with proper value
            string report = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? eliminate = null; // TODO: replace null with proper value
            int? eliminationThreshold = null; // TODO: replace null with proper value
            List<int?> row = null; // TODO: replace null with proper value
            List<int?> column = null; // TODO: replace null with proper value
            bool? flattenRowHeaders = null; // TODO: replace null with proper value
            
            var response = instance.ListSpreadsheetForReport(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, fiscalYear, fiscalPeriod, fiscalPeriodType, report, validate, language, eliminate, eliminationThreshold, row, column, flattenRowHeaders);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test PatchFacts
        /// </summary>
        [Test]
        public void PatchFactsTest()
        {
            // TODO: add unit test for the method 'PatchFacts'
            string token = null; // TODO: replace null with proper value
            Object patch = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> concept = null; // TODO: replace null with proper value
            List<string> fiscalYear = null; // TODO: replace null with proper value
            List<string> fiscalPeriod = null; // TODO: replace null with proper value
            List<string> fiscalPeriodType = null; // TODO: replace null with proper value
            List<string> archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            string map = null; // TODO: replace null with proper value
            string rule = null; // TODO: replace null with proper value
            string report = null; // TODO: replace null with proper value
            string additionalRules = null; // TODO: replace null with proper value
            bool? open = null; // TODO: replace null with proper value
            Dictionary<string, List<string>> dimensions = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionTypes = null; // TODO: replace null with proper value
            Dictionary<string, string> defaultDimensionValues = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionsCategory = null; // TODO: replace null with proper value
            Dictionary<string, bool?> dimensionsVisible = null; // TODO: replace null with proper value
            Dictionary<string, bool?> dimensionSlicers = null; // TODO: replace null with proper value
            Dictionary<string, int?> dimensionColumns = null; // TODO: replace null with proper value
            Dictionary<string, string> dimensionAggregation = null; // TODO: replace null with proper value
            string aggregationFunction = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            bool? count = null; // TODO: replace null with proper value
            
            var response = instance.PatchFacts(token, patch, profileName, formatIndent, tag, eid, cik, edinetcode, sic, ticker, aid, concept, fiscalYear, fiscalPeriod, fiscalPeriodType, archiveFiscalYear, archiveFiscalPeriod, map, rule, report, additionalRules, open, dimensions, dimensionTypes, defaultDimensionValues, dimensionsCategory, dimensionsVisible, dimensionSlicers, dimensionColumns, dimensionAggregation, aggregationFunction, validate, count);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test SpreadsheetForComponent
        /// </summary>
        [Test]
        public void SpreadsheetForComponentTest()
        {
            // TODO: add unit test for the method 'SpreadsheetForComponent'
            string token = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            string aid = null; // TODO: replace null with proper value
            List<string> eid = null; // TODO: replace null with proper value
            List<string> cik = null; // TODO: replace null with proper value
            List<string> ticker = null; // TODO: replace null with proper value
            List<int?> edinetcode = null; // TODO: replace null with proper value
            List<string> tag = null; // TODO: replace null with proper value
            List<string> sic = null; // TODO: replace null with proper value
            List<int?> section = null; // TODO: replace null with proper value
            List<string> hypercube = null; // TODO: replace null with proper value
            List<string> concept = null; // TODO: replace null with proper value
            List<string> fiscalYear = null; // TODO: replace null with proper value
            List<string> fiscalPeriod = null; // TODO: replace null with proper value
            List<string> fiscalPeriodType = null; // TODO: replace null with proper value
            string archiveFiscalYear = null; // TODO: replace null with proper value
            List<string> archiveFiscalPeriod = null; // TODO: replace null with proper value
            string additionalRules = null; // TODO: replace null with proper value
            string auditTrails = null; // TODO: replace null with proper value
            bool? open = null; // TODO: replace null with proper value
            List<string> filingKind = null; // TODO: replace null with proper value
            List<string> disclosure = null; // TODO: replace null with proper value
            List<string> reportElement = null; // TODO: replace null with proper value
            string label = null; // TODO: replace null with proper value
            string aggregationFunction = null; // TODO: replace null with proper value
            bool? validate = null; // TODO: replace null with proper value
            bool? merge = null; // TODO: replace null with proper value
            string language = null; // TODO: replace null with proper value
            bool? _override = null; // TODO: replace null with proper value
            bool? eliminate = null; // TODO: replace null with proper value
            int? eliminationThreshold = null; // TODO: replace null with proper value
            bool? autoSlice = null; // TODO: replace null with proper value
            List<int?> row = null; // TODO: replace null with proper value
            List<int?> column = null; // TODO: replace null with proper value
            bool? flattenRowHeaders = null; // TODO: replace null with proper value
            
            var response = instance.SpreadsheetForComponent(token, profileName, formatIndent, aid, eid, cik, ticker, edinetcode, tag, sic, section, hypercube, concept, fiscalYear, fiscalPeriod, fiscalPeriodType, archiveFiscalYear, archiveFiscalPeriod, additionalRules, auditTrails, open, filingKind, disclosure, reportElement, label, aggregationFunction, validate, merge, language, _override, eliminate, eliminationThreshold, autoSlice, row, column, flattenRowHeaders);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test UpsertLabels
        /// </summary>
        [Test]
        public void UpsertLabelsTest()
        {
            // TODO: add unit test for the method 'UpsertLabels'
            string token = null; // TODO: replace null with proper value
            Object label = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            
            var response = instance.UpsertLabels(token, label, profileName, formatIndent);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test UpsertReportElements
        /// </summary>
        [Test]
        public void UpsertReportElementsTest()
        {
            // TODO: add unit test for the method 'UpsertReportElements'
            string token = null; // TODO: replace null with proper value
            Object reportElement = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            
            var response = instance.UpsertReportElements(token, reportElement, profileName, formatIndent);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
        /// <summary>
        /// Test UpsertSections
        /// </summary>
        [Test]
        public void UpsertSectionsTest()
        {
            // TODO: add unit test for the method 'UpsertSections'
            string token = null; // TODO: replace null with proper value
            Object section = null; // TODO: replace null with proper value
            string profileName = null; // TODO: replace null with proper value
            string formatIndent = null; // TODO: replace null with proper value
            
            var response = instance.UpsertSections(token, section, profileName, formatIndent);
            Assert.IsInstanceOf<Object> (response, "response is Object"); 
        }
        
    }

}
